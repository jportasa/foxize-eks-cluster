# Docu: https://eksctl.io/
# Upgrade your eksctl to last version. current is 0.22.0.
# Networking recommendations: https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html
# Manually: Crear 3 subnets nuevas privadas para los nodos.
# Manually: Crear 1xIG (necesatio si tenemos NATGW) y atacharlo a la VPC.
# Manually: Crear un 1x NAT GW en la AZ publica con su EIP para que nodos privados que estna en las diferentes AZ's puedan salir a Internet. Añadir ruta 0/0 a la route table.
# Slack support https://slack.weave.works/

apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: EKS-cluster-foxize
  region: eu-west-1
  version: "1.16" # k8s version

# Docu: https://eksctl.io/usage/iamserviceaccounts/
iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: iam-foxize
        # if no namespace is set, "default" will be used;
        # the namespace will be created if it doesn't exist already
        namespace: pro
        labels: {aws-usage: "foxizecloud"}
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/AmazonSQSFullAccess" # Para acceder a SQS
        - "arn:aws:iam::aws:policy/AmazonSESFullAccess" # Para acceder a SES
        - "arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess" # Para acceder a ACM

vpc:
  id: "vpc-0c9405fa17407592e"
  cidr: "172.31.0.0/16"
  subnets:
    public:
      eu-west-1a:
        id: "subnet-00ec0d27f71ad3e64"
        cidr: "172.31.0.0/20"
      eu-west-1b:
        id: "subnet-00ec0d27f71ad3e64"
        cidr: "172.31.16.0/20"
      eu-west-1c:
        id: "subnet-00ec0d27f71ad3e64"
        cidr: "172.31.32.0/20"
    private:
      eu-west-1a:
        id: "subnet-011f99766e1035c1c"
        cidr: "172.31.48.0/20"
      eu-west-1b:
        id: "subnet-021758cd2fc0d94f9"
        cidr: "172.31.64.0/20"
      eu-west-1c:
        id: "subnet-072845fca79489e2a"
        cidr: "172.31.80.0/20"
  nat:
    gateway: Single

nodeGroups:
  - name: front
    minSize: 1
    maxSize: 4
    volumeSize: 20
    availabilityZones:
      - eu-west-1a
      # - eu-west-1b
      # - eu-west-1c
    instancesDistribution:
      maxPrice: 0.0076
      instanceTypes: ["t2.small", "t3.small", "t3a.small"]
      onDemandBaseCapacity: 0 #  If you leave it set to 0, On-Demand Instances are launched as a percentage of the Auto Scaling group's desired capacity, per the OnDemandPercentageAboveBaseCapacity setting.
      onDemandPercentageAboveBaseCapacity: 25 # The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances
    privateNetworking: true
    ssh:
      publicKeyName: joan-key
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy # Mandatory
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy # Mandatory
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly # Mandatory
      withAddonPolicies:
        autoScaler: true
        externalDNS: true
        cloudWatch: true
        albIngress: true   # Needed if you use ALB+ingress
        certManager: true
        imageBuilder: true # Allow r/w access to ECR
    labels:
      nodegroup: front
    tags:
      # EC2 tags required for cluster-autoscaler auto-discovery
      'k8s.io/cluster-autoscaler/enabled': 'true'
      'k8s.io/cluster-autoscaler/EKS-cluster-foxize': ''

  - name: back
    minSize: 0
    maxSize: 0
    volumeSize: 20
    availabilityZones:
      - eu-west-1a
      # - eu-west-1b
      # - eu-west-1c
    instancesDistribution:
      maxPrice: 0.0076
      instanceTypes: ["t2.small", "t3.small", "t3a.small"]
      onDemandBaseCapacity: 0
      onDemandPercentageAboveBaseCapacity: 25
    privateNetworking: true
    ssh:
      publicKeyName: joan-key
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy # Mandatory
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy # Mandatory
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly # Mandatory
      withAddonPolicies:
        autoScaler: true
        externalDNS: true
        cloudWatch: true
        albIngress: true   # Needed if you use ALB+ingress
        certManager: true
        imageBuilder: true # Allow r/w access to ECR
    labels:
      nodegroup: back
    tags:
      # EC2 tags required for cluster-autoscaler auto-discovery
      'k8s.io/cluster-autoscaler/enabled': 'true'
      'k8s.io/cluster-autoscaler/EKS-cluster-foxize': ''
